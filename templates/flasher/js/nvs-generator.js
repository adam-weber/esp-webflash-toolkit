class w{constructor(){this.PAGE_SIZE=4096,this.ENTRY_SIZE=32,this.ENTRIES_PER_PAGE=126,this.TYPE_U8=1,this.TYPE_I8=17,this.TYPE_U16=2,this.TYPE_I16=18,this.TYPE_U32=4,this.TYPE_I32=20,this.TYPE_STR=33,this.TYPE_BLOB=65,this.PAGE_STATE_ACTIVE=4294967294,this.PAGE_STATE_FULL=4294967292,this.PAGE_STATE_EMPTY=4294967295}generate(s,i=24576){const n=Math.floor(i/this.PAGE_SIZE),e=new Uint8Array(i);e.fill(255);let t=0,r=1,h=0;const o={};for(const f of Object.keys(s))Object.keys(s[f]).length>0&&(o[f]=++h);const c=t*this.PAGE_SIZE+32;e[c]=170,e[c+1]=170;for(const[f,E]of Object.entries(s))if(Object.keys(E).length>0){const l=o[f];this.writeEntry(e,t,r++,{namespace:0,type:1,span:1,key:f,data:new Uint8Array([l])});for(const[P,F]of Object.entries(E)){const _=this.createEntry(l,P,F);if(this.writeEntry(e,t,r,_),r+=_.span,r>=this.ENTRIES_PER_PAGE){this.finalizePage(e,t,r),t++,r=1;const p=t*this.PAGE_SIZE+32;if(e[p]=170,e[p+1]=170,t>=n)throw new Error("NVS partition size too small for data")}}}return r>0&&this.finalizePage(e,t,r),e}createEntry(s,i,n){let e,t;if(typeof n=="string"){e=this.TYPE_STR;const o=new TextEncoder().encode(n);t=new Uint8Array(o.length+1),t.set(o),t[o.length]=0,console.log(`[NVS Writer] Key: ${i}, value: "${n}", data.length: ${t.length}, bytes:`,Array.from(t))}else if(typeof n=="number")if(Number.isInteger(n))n>=0&&n<=255?(e=this.TYPE_U8,t=new Uint8Array([n])):n>=0&&n<=65535?(e=this.TYPE_U16,t=new Uint8Array(2),new DataView(t.buffer).setUint16(0,n,!0)):(e=this.TYPE_U32,t=new Uint8Array(4),new DataView(t.buffer).setUint32(0,n,!0));else throw new Error("Float values not supported yet");else throw new Error(`Unsupported value type for key ${i}: ${typeof n}`);let r=1;return e===this.TYPE_STR||e===this.TYPE_BLOB?r=1+Math.ceil(t.length/this.ENTRY_SIZE):r=1,{namespace:s,type:e,span:r,key:i,data:t}}writeEntry(s,i,n,e){const t=i*this.PAGE_SIZE+32+n*this.ENTRY_SIZE,r=new DataView(s.buffer);s[t+0]=e.namespace,s[t+1]=e.type,s[t+2]=e.span,s[t+3]=255;const h=new TextEncoder().encode(e.key.substring(0,15));s.set(h,t+8);for(let f=h.length;f<16;f++)s[t+8+f]=0;if(e.type===this.TYPE_STR||e.type===this.TYPE_BLOB){r.setUint16(t+24,e.data.length,!0);let f=0;for(let E=1;E<e.span;E++){const l=t+E*this.ENTRY_SIZE,P=e.data.slice(f,f+this.ENTRY_SIZE);s.set(P,l),f+=this.ENTRY_SIZE}}else s.set(e.data,t+24);const o=new Uint8Array(28);o[0]=s[t+0],o[1]=s[t+1],o[2]=s[t+2],o[3]=s[t+3],o.set(s.slice(t+8,t+24),4),o.set(s.slice(t+24,t+32),20);const c=this.calculateCRC32(o);r.setUint32(t+4,c,!0)}finalizePage(s,i,n){const e=i*this.PAGE_SIZE,t=new DataView(s.buffer);t.setUint32(e+0,this.PAGE_STATE_ACTIVE,!0),t.setUint32(e+4,i,!0),t.setUint32(e+8,4294967295,!0);const r=this.calculateCRC32(s.slice(e,e+28));t.setUint32(e+28,r,!0)}calculateCRC32(s){let i=4294967295;for(let n=0;n<s.length;n++){i^=s[n];for(let e=0;e<8;e++)i=i>>>1^3988292384&-(i&1)}return~i>>>0}}function I(a,s="config",i=24576){const n=new w,e={};e[s]={};for(const[t,r]of Object.entries(a))for(const[h,o]of Object.entries(r)){const c=`${t}_${h}`;e[s][c]=o}return n.generate(e,i)}w.prototype.parse=function(a){const s={},i={},n=new DataView(a.buffer,a.byteOffset,a.byteLength),e=Math.floor(a.length/this.PAGE_SIZE);for(let t=0;t<e;t++){const r=t*this.PAGE_SIZE,h=n.getUint32(r,!0);if(!(h===this.PAGE_STATE_EMPTY||h===0))for(let o=1;o<this.ENTRIES_PER_PAGE;){const c=r+32+o*this.ENTRY_SIZE,f=n.getUint8(c);if(f===255){o++;continue}const E=n.getUint8(c+1),l=n.getUint8(c+2),P=new Uint8Array(a.buffer,a.byteOffset+c+8,16),F=P.indexOf(0),_=new TextDecoder().decode(P.slice(0,F>0?F:16));if(E===1&&f===0){const g=n.getUint8(c+24);i[g]=_,s[_]||(s[_]={}),o+=l;continue}const p=i[f]||`ns_${f}`;s[p]||(s[p]={});let T;if(E===this.TYPE_U8)T=n.getUint8(c+24);else if(E===this.TYPE_I8)T=n.getInt8(c+24);else if(E===this.TYPE_U16)T=n.getUint16(c+24,!0);else if(E===this.TYPE_I16)T=n.getInt16(c+24,!0);else if(E===this.TYPE_U32)T=n.getUint32(c+24,!0);else if(E===this.TYPE_I32)T=n.getInt32(c+24,!0);else if(E===this.TYPE_STR){const g=n.getUint16(c+24,!0),u=new Uint8Array(g);let A=0;for(let d=1;d<l;d++){const y=c+d*this.ENTRY_SIZE,U=Math.min(g-A,this.ENTRY_SIZE);u.set(new Uint8Array(a.buffer,a.byteOffset+y,U),A),A+=U}const x=u.indexOf(0),S=x>=0?x:g;console.log(`[NVS Parser] Key: ${_}, strLen: ${g}, span: ${l}, bytes:`,Array.from(u.slice(0,S+1))),T=new TextDecoder().decode(u.slice(0,S))}else if(E===this.TYPE_BLOB){const g=n.getUint16(c+20,!0);T=new Uint8Array(a.buffer,a.byteOffset+c+24,Math.min(g,8))}else{o++;continue}s[p][_]=T,o+=l}}return s};function Y(a,s="config"){return new w().parse(a)[s]||{}}typeof window<"u"&&(window.NVSGenerator=w,window.generateNVSFromConfig=I,window.parseNVSConfig=Y);export{w as NVSGenerator,I as generateNVSFromConfig,Y as parseNVSConfig};
//# sourceMappingURL=nvs-generator.js.map
